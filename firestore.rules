rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Admin SDK access - allow operations from server-side admin code
    // This needs to be at the top level to apply to all collections
    match /{document=**} {
      allow read, write: if request.auth != null && 
        (request.auth.token.admin == true || 
         request.auth.token.firebase.sign_in_provider == 'google.com' && 
         request.auth.token.email == "neilrossstewart@gmail.com");
    }
    
    // Courses collection - enhanced with index support
    match /courses/{courseId} {
      allow read: if true;  // Anyone can read courses and use indexes
      
      // Only admin can write
      allow write: if request.auth != null 
        && request.auth.token.email == "neilrossstewart@gmail.com";
      
      // Allow querying with our composite indexes
      allow list: if true;  // This enables querying with orderBy, where, etc.
    }
    
    // Reviews collection - keep existing
    match /reviews/{reviewId} {
      allow read: if true;  // Anyone can read reviews
      allow create: if request.auth != null;  // Logged in users can create reviews
      allow update, delete: if request.auth != null 
        && (request.auth.uid == resource.data.userId  // User can modify their own reviews
            || request.auth.token.email == "neilrossstewart@gmail.com");  // Or admin can modify
    }
    
    // News collection
    match /news/{articleId} {
      allow read: if true;  // Anyone can read news articles
      allow write: if request.auth != null 
        && request.auth.token.email == "neilrossstewart@gmail.com";  // Only admin can write
    }
    
    // Users collection - if needed in future
    match /users/{userId} {
      allow read: if true;  // Public profiles
      allow write: if request.auth != null 
        && (request.auth.uid == userId  // Users can modify their own profile
            || request.auth.token.email == "neilrossstewart@gmail.com");  // Or admin can modify
    }
  }
}
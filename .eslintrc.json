{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json",
    "ecmaVersion": 2020,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "extends": [
    "next/core-web-vitals",
    "plugin:@typescript-eslint/recommended"
  ],
  "plugins": ["@typescript-eslint"],
  "rules": {
    // React - downgrade unescaped entities to warning for soft launch
    "react/no-unescaped-entities": "warn",
    
    // Type safety - keep these as warnings for awareness
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/no-unsafe-assignment": "warn", 
    "@typescript-eslint/no-unsafe-member-access": "warn",
    "@typescript-eslint/no-unsafe-argument": "warn",
    "@typescript-eslint/no-unsafe-call": "warn",
    "@typescript-eslint/no-unsafe-return": "warn",
    
    // Code style - downgrade to warnings for soft launch
    "import/order": "warn",
    "curly": "warn", 
    "brace-style": "warn",
    "eqeqeq": "warn",
    
    // Unused variables - keep as warnings
    "@typescript-eslint/no-unused-vars": "warn",
    "no-duplicate-imports": "warn",
    
    // React hooks - keep as warnings but important for functionality
    "react-hooks/exhaustive-deps": "warn",
    "react-hooks/rules-of-hooks": "error",
    
    // Performance - keep as warnings
    "@next/next/no-img-element": "warn",
    "@next/next/google-font-display": "warn",
    "@next/next/no-page-custom-font": "warn",
    
    // Promise handling - important for reliability
    "@typescript-eslint/no-floating-promises": "warn",
    "@typescript-eslint/no-misused-promises": "warn",
    
    // Consistency - warnings for now
    "@typescript-eslint/prefer-optional-chain": "warn",
    "@typescript-eslint/no-inferrable-types": "warn",
    "@typescript-eslint/no-non-null-assertion": "warn",
    
    // Keep const/let preference as warning
    "prefer-const": "warn"
  }
}
